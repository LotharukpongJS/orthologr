% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diamond.R
\name{diamond}
\alias{diamond}
\title{Perform a DIAMOND2 search}
\usage{
diamond(
  query_file,
  subject_file,
  seq_type = "cds",
  format = "fasta",
  diamond_algorithm = "blastp",
  sensitivity_mode = "fast",
  eval = "1E-5",
  max.target.seqs = 10000,
  delete_corrupt_cds = TRUE,
  path = NULL,
  comp_cores = 1,
  diamond_params = NULL,
  clean_folders = FALSE,
  save.output = NULL
)
}
\arguments{
\item{query_file}{a character string specifying the path to the CDS file of interest (query organism).}

\item{subject_file}{a character string specifying the path to the CDS file of interest (subject organism).}

\item{seq_type}{a character string specifying the sequence type stored in the input file.
Options are are: "cds", "protein", or "dna". In case of "cds", sequence are translated to protein sequences,
in case of "dna", cds prediction is performed on the corresponding sequences which subsequently are
translated to protein sequences. Default is \code{seq_type} = "cds".}

\item{format}{a character string specifying the file format of the sequence file, e.g. \code{format} = \code{"fasta"}.
Default is \code{format} = \code{"fasta"}.}

\item{diamond_algorithm}{a character string specifying the DIAMOND2 algorithm that shall be used, option is currently limited to: \code{diamond_algorithm} = \code{"blastp"}}

\item{sensitivity_mode}{specify the level of alignment sensitivity. The higher the sensitivity level, the more deep homologs can be found, but at the cost of reduced computational speed.
- sensitivity_mode = "faster" : fastest alignment mode, but least sensitive (default). Designed for finding hits of >70
- sensitivity_mode = "default" : Default mode. Designed for finding hits of >70
- sensitivity_mode = "fast" : fast alignment mode, but least sensitive (default). Designed for finding hits of >70
- sensitivity_mode = "mid-sensitive" : fast alignments between the fast mode and the sensitive mode in sensitivity.
- sensitivity_mode = "sensitive" : fast alignments, but full sensitivity for hits >40
- sensitivity_mode = "more-sensitive" : more sensitive than the sensitive mode.
- sensitivity_mode = "very-sensitive" : sensitive alignment mode.
- sensitivity_mode = "ultra-sensitive" : most sensitive alignment mode (sensitivity as high as BLASTP).}

\item{eval}{a numeric value specifying the E-Value cutoff for DIAMOND2 hit detection.}

\item{max.target.seqs}{a numeric value specifying the number of aligned sequences to keep.
Please be aware that \code{max.target.seqs} selects best hits based on the database entry and not by the best e-value. See details here: https://academic.oup.com/bioinformatics/advance-article/doi/10.1093/bioinformatics/bty833/5106166 .}

\item{delete_corrupt_cds}{a logical value indicating whether sequences with corrupt base triplets should be removed from the input \code{file}. This is the case when the length of coding sequences cannot be divided by 3 and thus the coding sequence contains at least one corrupt base triplet.}

\item{path}{a character string specifying the path to the DIAMOND2 program (in case you don't use the default path).}

\item{comp_cores}{a numeric value specifying the number of cores that shall be
used to run DIAMOND2 searches.}

\item{diamond_params}{a character string listing the input paramters that shall be passed to the executing DIAMOND2 program. Default is \code{NULL}, implicating
that a set of default parameters is used when running DIAMOND2.}

\item{clean_folders}{a boolean value specifying whether all internall folders storing the output of used programs
shall be removed. Default is \code{clean_folders} = \code{FALSE}.}

\item{save.output}{a path to the location were the DIAMOND2 output shall be stored. E.g. \code{save.output} = \code{getwd()}
to store it in the current working directory, or \code{save.output} = \code{file.path(put,your,path,here)}.}
}
\value{
A data.table storing the DIAMOND2 hit table returned by DIAMOND2. The format is the same as with BLAST.
}
\description{
This function performs a DIAMOND2 search of a given set of sequences against a given database.
}
\details{
This function provides a fast communication between R and DIAMOND2. It is mainly used as internal functions
such as \code{\link{diamond_best}} and \code{\link{diamond_rec}} but can also be used to perform simple DIAMOND2 computations.
This function gives the same output as \code{\link{blast}} while being up to 10 000X faster in larger databases.
}
\examples{
\dontrun{
# performing a DIAMOND2 search using diamond blastp (default)
diamond(query_file   = system.file('seqs/ortho_thal_cds.fasta', package = 'orthologr'),
        subject_file = system.file('seqs/ortho_lyra_cds.fasta', package = 'orthologr'))

# performing a DIAMOND2 search using diamond blastp (default) using amino acid sequences as input file
diamond(query_file   = system.file('seqs/ortho_thal_aa.fasta', package = 'orthologr'),
        subject_file = system.file('seqs/ortho_lyra_aa.fasta', package = 'orthologr'),
        seq_type     = "protein")


# save the DIAMOND2 output table in your current working directory
diamond(query_file   = system.file('seqs/ortho_thal_aa.fasta', package = 'orthologr'),
        subject_file = system.file('seqs/ortho_lyra_aa.fasta', package = 'orthologr'),
        seq_type     = "protein",
        save.output  = getwd())

# in case you are working with a multicore machine, you can also run parallel
# DIAMOND2 computations using the comp_cores parameter: here with 2 cores
diamond(query_file   = system.file('seqs/ortho_thal_cds.fasta', package = 'orthologr'),
        subject_file = system.file('seqs/ortho_lyra_cds.fasta', package = 'orthologr'),
        comp_cores   = 2)


 # running diamond using additional parameters
 diamond(query_file   = system.file('seqs/ortho_thal_cds.fasta', package = 'orthologr'),
         subject_file = system.file('seqs/ortho_lyra_cds.fasta', package = 'orthologr'),
         diamond_params = "--max-target-seqs 1")


# running diamond using additional parameters and an external diamond path
 diamond(query_file   = system.file('seqs/ortho_thal_cds.fasta', package = 'orthologr'),
         subject_file = system.file('seqs/ortho_lyra_cds.fasta', package = 'orthologr'),
         diamond_params = "--max-target-seqs 1", path = "path/to/diamond/")
}

}
\references{
Buchfink, B., Reuter, K., & Drost, H. G. (2021) "Sensitive protein alignments at tree-of-life scale using DIAMOND." Nature methods, 18(4), 366-368.

https://github.com/bbuchfink/diamond/wiki/3.-Command-line-options
}
\seealso{
\code{\link{diamond_best}}, \code{\link{diamond_rec}}, \code{\link{set_diamond}}, \code{\link{blast}}
}
\author{
Jaruwatana Sodai Lotharukpong
}
